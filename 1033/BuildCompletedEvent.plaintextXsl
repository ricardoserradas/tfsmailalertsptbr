<?xml version='1.0'?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0" xmlns:tb="http://schemas.microsoft.com/TeamFoundation/2010/Build">
  <!-- Common TeamSystem elements -->
  <xsl:import href="TeamFoundation.xsl"/>
  <xsl:output encoding="utf-8" indent="no" method="text" standalone="yes"/>

  <xsl:template match="/">
    <xsl:apply-templates select="*"/>
  </xsl:template>

  <xsl:template match="tb:BuildCompletedEvent">
    <xsl:choose>
      <xsl:when test="tb:Build/@Reason = 'CheckInShelveset'">
        <xsl:variable name="totalRequests" select="count(tb:Requests/tb:QueuedBuild)" />
        <xsl:variable name="succeededRequests" select="count(tb:Build/tb:Information/tb:BuildInformationNode[@Type = 'CheckInOutcome'][count(tb:Fields/tb:InformationField[@Name = 'RequestId' and @Value > 0]) > 0][count(tb:Fields/tb:InformationField[@Name = 'ChangesetId' and @Value > 0]) > 0])" />
        <xsl:choose>
          <xsl:when test="$totalRequests = 1">
            <xsl:choose>
              <xsl:when test="$succeededRequests = 0">
                <!-- _locID_text="CheckInRejected" --><xsl:value-of select="tb:Build/@BuildNumber"/> - Check-in Negado
              </xsl:when>
              <xsl:otherwise>
                <!-- _locID_text="CheckInCommitted" --><xsl:value-of select="tb:Build/@BuildNumber"/> - Check-in Aceito
              </xsl:otherwise>
            </xsl:choose>
          </xsl:when>
          <xsl:otherwise>
            <!-- _locID_text="Committed_N_Requests"--><xsl:value-of select="tb:Build/@BuildNumber"/> <xsl:value-of select="$succeededRequests"/> Changesets aceitos para <xsl:value-of select="$totalRequests" /> Requisições de Check-in
          </xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:otherwise>
        <xsl:choose>
          <xsl:when test="tb:Build/@Status = 'Succeeded'">
            <!-- _locID_text="Succeeded" --><xsl:value-of select="tb:Build/@BuildNumber"/> - Passou
          </xsl:when>
          <xsl:when test="tb:Build/@Status = 'PartiallySucceeded'">
            <!-- _locID_text="PartiallySucceeded" --><xsl:value-of select="tb:Build/@BuildNumber"/> - Passou Parcialmente
          </xsl:when>
          <xsl:when test="tb:Build/@Status = 'Failed'">
            <!-- _locID_text="Failed" --><xsl:value-of select="tb:Build/@BuildNumber"/> - Falhou
          </xsl:when>
          <xsl:otherwise>
            <!-- _locID_text="Stopped" --><xsl:value-of select="tb:Build/@BuildNumber"/> - Interrompido
          </xsl:otherwise>
        </xsl:choose>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:call-template name="SectionDivider" />
    <xsl:call-template name="VisualStudioLink">
      <xsl:with-param name="uri" select="tb:Uri"/>
    </xsl:call-template>
    <xsl:call-template name="SectionDivider" />
    <!-- _locID_text="RequestSummary" -->Sumário da Requisição
<xsl:apply-templates select="tb:Requests/tb:QueuedBuild">
      <xsl:sort select="@Id"/>
    </xsl:apply-templates>
    <xsl:call-template name="SectionDivider" />
    <!-- _locID_text="BuildSummary" -->Sumário
    <xsl:apply-templates select="tb:Build/tb:Information/tb:BuildInformationNode[@Type = 'ConfigurationSummary']">
      <xsl:sort select="tb:Fields/tb:InformationField[@Name = 'Platform']/@Value"/>
    </xsl:apply-templates>
    <xsl:variable name="otherErrors" select="count(tb:Build/tb:Information/tb:BuildInformationNode[@Type = 'BuildError' and (count(@ParentId) = 0 or @ParentId = 0)])"/>
    <xsl:if test="$otherErrors > 0">
      <xsl:call-template name="indent">
        <xsl:with-param name="depth" select="1"/>
        <xsl:with-param name="indentChars" select="'    '"/>
      </xsl:call-template>
      <!-- _locID_text="OtherErrors" --><xsl:text>Outros Erros</xsl:text>
      <xsl:text>&#xA;</xsl:text>
      <xsl:call-template name="indent">
        <xsl:with-param name="depth" select="1"/>
        <xsl:with-param name="indentChars" select="'    '"/>
      </xsl:call-template>
      <xsl:value-of select="$otherErrors"/><xsl:text> erro(s)</xsl:text>
      <xsl:text>&#xA;</xsl:text>
      <xsl:apply-templates select="tb:Build/tb:Information/tb:BuildInformationNode[@Type = 'BuildError' and (count(@ParentId) = 0 or @ParentId = 0)]"/>
    </xsl:if>
    <!-- Apply the standard TFS footer -->
    <xsl:call-template name="footer">
      <xsl:with-param name="format" select="'text'"/>
      <xsl:with-param name="alertOwner" select="tb:Subscriber"/>
      <xsl:with-param name="timeZoneOffset" select="tb:TimeZoneOffset"/>
      <xsl:with-param name="timeZoneName" select="tb:TimeZone"/>
    </xsl:call-template>
  </xsl:template>

  <!-- These errors go into the other errors category -->
  <xsl:template match="tb:BuildInformationNode[@Type = 'BuildError' and (count(@ParentId) = 0 or @ParentId = 0)]">
    <xsl:call-template name="indent">
      <xsl:with-param name="depth" select="2"/>
      <xsl:with-param name="indentChars" select="'    '"/>
    </xsl:call-template>
    <xsl:value-of select="tb:Fields/tb:InformationField[@Name = 'Message']/@Value"/>
    <xsl:text>&#xA;</xsl:text>
  </xsl:template>

  <!-- These errors are associated with a project which was built -->
  <xsl:template match="tb:BuildInformationNode[@Type = 'BuildError' and count(@ParentId) > 0 and @ParentId > 0]">
    <xsl:call-template name="indent">
      <xsl:with-param name="depth" select="3"/>
      <xsl:with-param name="indentChars" select="'    '"/>
    </xsl:call-template>
    <xsl:value-of select="tb:Fields/tb:InformationField[@Name = 'File']/@Value"/> (<xsl:value-of select="tb:Fields/tb:InformationField[@Name = 'LineNumber']/@Value"/>): <xsl:value-of select="tb:Fields/tb:InformationField[@Name = 'Message']/@Value"/>
    <xsl:text>&#xA;</xsl:text>
  </xsl:template>

  <xsl:template match="tb:BuildInformationNode[@Type = 'BuildProject']">
    <xsl:variable name="nodeId" select="@NodeId"/>
    <xsl:call-template name="indent">
      <xsl:with-param name="depth" select="2"/>
      <xsl:with-param name="indentChars" select="'    '"/>
    </xsl:call-template>
    <!-- _locID_text="ProjectSummary" --><xsl:value-of select="tb:Fields/tb:InformationField[@Name = 'ServerPath']/@Value"/><xsl:text> - </xsl:text><xsl:value-of select="tb:Fields/tb:InformationField[@Name = 'CompilationErrors']/@Value"/><!-- _locID_text="Errors" --><xsl:text> erro(s), </xsl:text><xsl:value-of select="tb:Fields/tb:InformationField[@Name = 'CompilationWarnings']/@Value"/><!-- _locID_text="Warnings" --><xsl:text> aviso(s)&#xA;</xsl:text>
    <xsl:apply-templates select="../tb:BuildInformationNode[@Type = 'BuildError' and @ParentId = $nodeId]"/>
  </xsl:template>

  <xsl:template match="tb:BuildInformationNode[@Type = 'ConfigurationSummary']">
    <xsl:variable name="platform" select="tb:Fields/tb:InformationField[@Name = 'Platform']/@Value" />
    <xsl:variable name="flavor" select="tb:Fields/tb:InformationField[@Name = 'Flavor']/@Value" />
    <xsl:value-of select="$flavor"/><xsl:text> | </xsl:text><xsl:value-of select="$platform"/>
    <xsl:text>&#xA;</xsl:text>
    <xsl:call-template name="indent">
      <xsl:with-param name="depth" select="1"/>
      <xsl:with-param name="indentChars" select="'    '"/>
    </xsl:call-template>
    <xsl:value-of select="tb:Fields/tb:InformationField[@Name = 'TotalCompilationErrors']/@Value"/><!-- _locID_text="Errors" --><xsl:text> erro(s), </xsl:text><xsl:value-of select="tb:Fields/tb:InformationField[@Name = 'TotalCompilationWarnings']/@Value"/><!-- _locID_text="Warnings" --><xsl:text> aviso(s)&#xA;</xsl:text>
    <xsl:apply-templates select="../tb:BuildInformationNode[@Type = 'BuildProject'][count(tb:Fields/tb:InformationField[@Name = 'Platform' and @Value = $platform]) > 0][count(tb:Fields/tb:InformationField[@Name = 'Flavor' and @Value = $flavor]) > 0]"/>
  </xsl:template>

  <xsl:template match="tb:QueuedBuild">
    <xsl:variable name="requestId" select="@Id"/>
    <xsl:variable name="changesetId" select="../../tb:Build/tb:Information/tb:BuildInformationNode[@Type = 'CheckInOutcome'][count(tb:Fields/tb:InformationField[@Name = 'RequestId' and @Value = $requestId]) > 0]/tb:Fields/tb:InformationField[@Name = 'ChangesetId']/@Value"/>
    <xsl:call-template name="indent">
      <xsl:with-param name="depth" select="1"/>
      <xsl:with-param name="indentChars" select="'    '"/>
    </xsl:call-template>
    <xsl:choose>
      <xsl:when test="@Reason = 'CheckInShelveset'">
        <xsl:choose>
          <xsl:when test="$changesetId > 0"><!-- _locID_text="RequestCheckInCommitted" -->Requisição <xsl:value-of select="$requestId"/>, realizada por <xsl:value-of select="@RequestedForDisplayName"/>, Check-in Realizado</xsl:when>
          <xsl:when test="$changesetId = 0"><!-- _locID_text="RequestNoChangesCheckedIn" -->Requisição <xsl:value-of select="$requestId"/>, realizada por <xsl:value-of select="@RequestedForDisplayName"/>, Nenhum Check-in realizado</xsl:when>
          <xsl:otherwise><!-- _locID_text="RequestCheckInRejected" -->Requisição <xsl:value-of select="$requestId"/>, realizada por <xsl:value-of select="@RequestedForDisplayName"/>, Check-in Negado</xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:otherwise><!-- _locID_text="RequestCompleted" -->Requisição <xsl:value-of select="$requestId"/>, realizada por <xsl:value-of select="@RequestedForDisplayName"/>, Finalizado</xsl:otherwise>
    </xsl:choose>
    <xsl:text>&#xA;</xsl:text>
  </xsl:template>
  
  <!-- Template for loading Visual Studio -->
  <xsl:template name="VisualStudioLink">
    <xsl:param name="uri"/>
    <!-- _locID_text="OpenInVS" -->Copy and paste the following into your web browser to open the code review in Visual Studio
	<!-- _locID_text="OpenInVS" -->Copie e cole a URL a seguir no seu navegador para abrir o Code Review no Visual Studio
    <xsl:text>&#xA;</xsl:text>
    <xsl:value-of select="$uri" />
  </xsl:template>

  <xsl:template name="SectionDivider">
    <xsl:text>&#xA;</xsl:text>
    <xsl:value-of select="$textSeparatorLong"/>
    <xsl:text>&#xA;</xsl:text>
    <xsl:text>&#xA;</xsl:text>
  </xsl:template>

  <xsl:template name="indent">
    <xsl:param name="depth" select="0" />
    <xsl:param name="indentChars" select="' '" />
    <xsl:if test="$depth &gt; 0">
      <xsl:value-of select="$indentChars" />
      <xsl:call-template name="indent">
        <xsl:with-param name="depth" select="$depth - 1" />
        <xsl:with-param name="indentChars" select="$indentChars" />
      </xsl:call-template>
    </xsl:if>
  </xsl:template>
  
</xsl:stylesheet>

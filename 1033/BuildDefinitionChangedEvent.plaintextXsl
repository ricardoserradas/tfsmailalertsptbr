<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:b="http://schemas.microsoft.com/TeamFoundation/2010/Build">
    <xsl:import href="TeamFoundation.xsl"/>
    <!-- Common TeamSystem elements -->
    <xsl:output indent="no"/>
    <!-- There is a problem with showing seconds from midnight in UTC time... 
         It seems that we need to take in account time zone to avoid daylight saving error -->
    <xsl:template name="GetTime">
        <xsl:param name="seconds"/>
        <xsl:variable name="hours" select="round($seconds div 3600)" />
        <xsl:variable name="minutes" select ="round(($seconds mod 3600) div 60)"/>
        <xsl:if test="$hours &lt; 12">
            <xsl:value-of select="format-number($hours, '00')"/>
            <xsl:text>:</xsl:text>
            <xsl:value-of select="format-number($minutes, '00')"/>
            <xsl:text>AM</xsl:text>
        </xsl:if>
        <xsl:if test="$hours &gt;= 12">
            <xsl:value-of select="format-number($hours - 12, '00')"/>
            <xsl:text>:</xsl:text>
            <xsl:value-of select="format-number($minutes, '00')"/>
            <xsl:text>PM</xsl:text>
        </xsl:if>
    </xsl:template>
    <xsl:template match="BuildDefinitionChangedEvent">
        <xsl:value-of select="b:Title" />
        <xsl:text>&#xA;</xsl:text>
        
        <xsl:value-of select="$textSeparatorLong"/>
        <xsl:text>&#xA;</xsl:text>
        
        <!-- _locID_text="TeamProjectCollection" -->Coleção: <xsl:value-of select="@TeamProjectCollectionUrl" />
        <xsl:text>&#xA;</xsl:text>

        <!-- _locID_text="EventAction" -->Ação: <xsl:value-of select="@ChangedType" />
        <xsl:text>&#xA;</xsl:text>

        <!-- _locID_text="ChangedBy" -->Modificado por: <xsl:value-of select="@ChangedBy" />
        <xsl:text>&#xA;</xsl:text>
        
        <!-- _locID_text="Name" -->Nome: <xsl:value-of select="@Name" /> (<xsl:value-of select="@Uri" />)
        <xsl:text>&#xA;</xsl:text>
        
        <xsl:choose>
            <!-- Added Build Definition -->
            <xsl:when test="@ChangedType = 'Added'">

                <!-- Properties -->
                <xsl:for-each select="b:PropertyChanges/b:PropertyChange">
                    <xsl:sort select="@Name"/>
                    <xsl:value-of select="@Name" />: <xsl:value-of select="b:NewValue" /><xsl:text>&#xA;</xsl:text>
                </xsl:for-each>
                                 
                <!-- Retention policies -->
                <xsl:for-each select="b:RetentionPolicyChanges/b:PropertyChangeOfRetentionPolicy">
                    <!-- Retention policy -->Política de Retenção[<xsl:value-of select="position()"/><xsl:text>]: </xsl:text>
                    <xsl:for-each select="b:NewValue/@*">
                        <xsl:sort select="name()"/>
                        <xsl:value-of select="name()" />=<xsl:value-of select="."/><xsl:text>, </xsl:text>
                    </xsl:for-each>
                    <xsl:text>&#13;</xsl:text>
                </xsl:for-each>
                                   
                <!-- Schedule -->
                <xsl:for-each select="b:ScheduleChanges/b:PropertyChangeOfSchedule">
                    <!-- Schedule -->Agendamento:<xsl:text>&#160;</xsl:text>
                    <xsl:for-each select="b:NewValue/@*">
                        <xsl:sort select="name()"/>
                        <xsl:value-of select="name()"/><xsl:text>=</xsl:text>
                        <xsl:if test="name() !='UtcStartTime'">
                            <xsl:value-of select="."/>
                        </xsl:if>
                        <xsl:if test="name() = 'UtcStartTime'">
                            <xsl:call-template name="GetTime">
                                <xsl:with-param name="seconds" select="."/>
                            </xsl:call-template>
                        </xsl:if>
                        <xsl:text>, </xsl:text>
                    </xsl:for-each>
                    <xsl:text>&#13;</xsl:text>
                </xsl:for-each>
                                 
                <!-- Mapeamento de Workspaces -->
                <xsl:for-each select="b:WorkspaceMappingChanges/b:PropertyChangeOfWorkspaceMappin">
                    <!-- Mapeamento de Workspace -->Mapeamento de Workspace[<xsl:value-of select="position()"/><xsl:text>]: </xsl:text>
                    <xsl:for-each select="b:NewValue/@*">
                        <xsl:sort select="name()"/>
                        <xsl:value-of select="name()" />=<xsl:value-of select="."/><xsl:text>, </xsl:text>
                    </xsl:for-each>
                    <xsl:text>&#13;</xsl:text>
                </xsl:for-each>
            </xsl:when>

            <!-- Updated Build Definition -->
            <xsl:when test="@ChangedType = 'Updated'">

                <!-- Properties -->
                <xsl:for-each select="b:PropertyChanges/b:PropertyChange">
                    <xsl:sort select="@Name"/>
                    <xsl:value-of select="@Name" /><xsl:text>:&#xA;</xsl:text>
                    <xsl:text>&#160;&#160;&#160;&#160;Valor Anterior:</xsl:text><xsl:value-of select="b:OldValue" /><xsl:text>&#xA;</xsl:text>
                    <xsl:text>&#160;&#160;&#160;&#160;Novo Valor:</xsl:text><xsl:value-of select="b:NewValue" /><xsl:text>&#xA;</xsl:text>
                </xsl:for-each>

                <!-- Retention policies -->
                <xsl:for-each select="b:RetentionPolicyChanges/b:PropertyChangeOfRetentionPolicy">
                    <xsl:text>Política de Retenção[</xsl:text><xsl:value-of select="position()"/><xsl:text>]:&#xA;</xsl:text>
                    <xsl:text>&#160;&#160;&#160;&#160;Valor Anterior:</xsl:text>
                    <xsl:for-each select="b:OldValue/@*">
                        <xsl:sort select="name()"/>
                        <xsl:value-of select="name()" />=<xsl:value-of select="."/><xsl:text>, </xsl:text>
                    </xsl:for-each>
                    <xsl:text>&#13;</xsl:text>
                    <xsl:text>&#160;&#160;&#160;&#160;Novo Valor:</xsl:text>
                    <xsl:for-each select="b:NewValue/@*">
                        <xsl:sort select="name()"/>
                        <xsl:value-of select="name()" />=<xsl:value-of select="."/><xsl:text>, </xsl:text>
                    </xsl:for-each>
                    <xsl:text>&#13;</xsl:text>
                </xsl:for-each>

                <!-- Schedule -->
                <xsl:for-each select="b:ScheduleChanges/b:PropertyChangeOfSchedule">
                    <xsl:text>Agendamento:&#xA;</xsl:text>
                    <xsl:text>&#160;&#160;&#160;&#160;Valor Anterior: </xsl:text>
                    <xsl:for-each select="b:OldValue/@*">
                        <xsl:sort select="name()"/>
                        <xsl:value-of select="name()"/><xsl:text>=</xsl:text>
                        <xsl:if test="name() !='UtcStartTime'">
                            <xsl:value-of select="."/>
                        </xsl:if>
                        <xsl:if test="name() = 'UtcStartTime'">
                            <xsl:call-template name="GetTime">
                                <xsl:with-param name="seconds" select="."/>
                            </xsl:call-template>
                        </xsl:if>
                        <xsl:text>, </xsl:text>
                    </xsl:for-each>
                    <xsl:text>&#13;</xsl:text>
                    <xsl:text>&#160;&#160;&#160;&#160;Novo Valor: </xsl:text>
                    <xsl:for-each select="b:NewValue/@*">
                        <xsl:sort select="name()"/>
                        <xsl:value-of select="name()"/><xsl:text>=</xsl:text>
                        <xsl:if test="name() !='UtcStartTime'">
                            <xsl:value-of select="."/>
                        </xsl:if>
                        <xsl:if test="name() = 'UtcStartTime'">
                            <xsl:call-template name="GetTime">
                                <xsl:with-param name="seconds" select="."/>
                            </xsl:call-template>
                        </xsl:if>
                        <xsl:text>, </xsl:text>
                    </xsl:for-each>
                    <xsl:text>&#13;</xsl:text>
                </xsl:for-each>

                <!-- Mapeamento de Workspaces -->
                <xsl:for-each select="b:WorkspaceMappingChanges/b:PropertyChangeOfWorkspaceMapping">
                    <xsl:text>Mapeamento de Workspace[</xsl:text><xsl:value-of select="position()"/><xsl:text>]:&#xA;</xsl:text>
                    <xsl:text>&#160;&#160;&#160;&#160;Valor Anterior:</xsl:text>
                    <xsl:for-each select="b:OldValue/@*">
                        <xsl:sort select="name()"/>
                        <xsl:value-of select="name()" />=<xsl:value-of select="."/><xsl:text>, </xsl:text>
                    </xsl:for-each>
                    <xsl:text>&#13;</xsl:text>
                    <xsl:text>&#160;&#160;&#160;&#160;Novo Valor:</xsl:text>
                    <xsl:for-each select="b:NewValue/@*">
                        <xsl:sort select="name()"/>
                        <xsl:value-of select="name()" />=<xsl:value-of select="."/><xsl:text>, </xsl:text>
                    </xsl:for-each>
                    <xsl:text>&#13;</xsl:text>
                </xsl:for-each>
            </xsl:when>

            <!-- Deleted Build Definition -->
            <xsl:when test="@ChangedType = 'Deleted'">

                <!-- Properties -->
                <xsl:for-each select="b:PropertyChanges/b:PropertyChange">
                    <xsl:sort select="@Name"/>
                    <xsl:value-of select="@Name" />: <xsl:value-of select="b:OldValue" /><xsl:text>&#xA;</xsl:text>
                </xsl:for-each>

                <!-- Retention policies -->
                <xsl:for-each select="b:RetentionPolicyChanges/b:PropertyChangeOfRetentionPolicy">
                    <!-- Retention policy -->Política de Retenção[<xsl:value-of select="position()"/><xsl:text>]: </xsl:text>
                    <xsl:for-each select="b:OldValue/@*">
                        <xsl:sort select="name()"/>
                        <xsl:value-of select="name()" />=<xsl:value-of select="."/><xsl:text>, </xsl:text>
                    </xsl:for-each>
                    <xsl:text>&#13;</xsl:text>
                </xsl:for-each>

                <!-- Schedule -->
                <xsl:for-each select="b:ScheduleChanges/b:PropertyChangeOfSchedule">
                    <!-- Schedule -->Agendamento:<xsl:text>&#160;</xsl:text>
                    <xsl:for-each select="b:OldValue/@*">
                        <xsl:sort select="name()"/>
                        <xsl:value-of select="name()"/><xsl:text>=</xsl:text>
                        <xsl:if test="name() !='UtcStartTime'">
                            <xsl:value-of select="."/>
                        </xsl:if>
                        <xsl:if test="name() = 'UtcStartTime'">
                            <xsl:call-template name="GetTime">
                                <xsl:with-param name="seconds" select="."/>
                            </xsl:call-template>
                        </xsl:if>
                        <xsl:text>, </xsl:text>
                    </xsl:for-each>
                    <xsl:text>&#13;</xsl:text>
                </xsl:for-each>

                <!-- Mapeamento de Workspaces -->
                <xsl:for-each select="b:WorkspaceMappingChanges/b:PropertyChangeOfWorkspaceMapping">
                    <!-- Mapeamento de Workspace -->Mapeamento de Workspace[<xsl:value-of select="position()"/><xsl:text>]: </xsl:text>
                    <xsl:for-each select="b:OldValue/@*">
                        <xsl:sort select="name()"/>
                        <xsl:value-of select="name()" />=<xsl:value-of select="."/><xsl:text>, </xsl:text>
                    </xsl:for-each>
                    <xsl:text>&#13;</xsl:text>
                </xsl:for-each>

            </xsl:when>
        </xsl:choose>
        <xsl:call-template name="footer">
            <xsl:with-param name="format" select="'text'"/>
            <xsl:with-param name="alertOwner" select="b:Subscriber"/>
            <xsl:with-param name="timeZoneOffset" select="b:TimeZoneOffset"/>
            <xsl:with-param name="timeZoneName" select="b:TimeZone"/>
        </xsl:call-template>
    </xsl:template>
</xsl:stylesheet>